-- TODO: Encrypt password so that we can send with rednet.broadcast() to get all infected hosts.

local timeout = 1

function get(str, char)
    char = char or nil
    write(str)
    return read(char)
end

function connect(id, pass)
    rednet.send(id, pass)
    local reply
    local dummy

    dummy, reply = rednet.receive(1)

    if reply == 'ok' then
        return true
    elseif reply ~= '' and reply ~= nil then
        return reply
    else
        return false
    end
end

function probe(id, pass)
    return connect(id, pass..' probe')
end

function userConnect()
    print('Virus client running.')
    local rdir = get('Modem direction (blank for turtle): ')
    if rdir ~= '' or rdir ~= nil then
        rednet.open(rdir)
    end
    local id = get('Host ID: ')
    local pass = get('Password: ', '*')
    local reply = connect()
    if reply == false then
        print('Connected.')
    elseif type(reply) == 'string' and reply ~= '' then
        print('Failed. Got message:')
        print('['..reply..']')
    else
        print('Failed. No response from server.')
    end
end

function scanRange()
    local min  = get('Min: ')
    local max  = get('Max: ')
    local pass = get('Password: ', '*')
    local reply, percentDone, y, dummy

    for i=min, max do
        percentDone = math.floor((((i-min)/max)*100)+0.5)
        write('Scanning '..i..'... '..percentDone..'%')

        newLine = false
        local reply = probe(i, pass)

        dummy, y = term.getCursorPos()
        term.clearLine()
        term.setCursorPos(1, y)
        if reply == true then
            print('\n'..i..': online')
            newLine = true
        elseif type(reply) == 'string' then
            print('\n'..i..': says ['..reply..']')
        end
    end
end

function mainMenu()
    local menu = {
        'Connect to a single computer.',
        'Scan a range of computers.',
        'Change timeout (currently: '..timeout..')'
    }
    for i,v in pairs(menu) do
        print('['..i..'] '..v)
    end
    local choice = get('#?: ')
    if choice == '1' then
        userConnect()
    elseif choice == '2' then
        scanRange()
    elseif choice == '3' then
        timeout = get('New timeout: ')
        mainMenu()
    end
end

mainMenu()
